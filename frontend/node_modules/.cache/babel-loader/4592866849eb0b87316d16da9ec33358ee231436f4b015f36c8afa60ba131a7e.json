{"ast":null,"code":"var _jsxFileName = \"C:\\\\NodeJS Apps\\\\weather-app\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [accessToken, setAccessToken] = useState(localStorage.getItem(\"accessToken\") || \"\");\n  const [refreshToken, setRefreshToken] = useState(localStorage.getItem(\"refreshToken\") || \"\");\n  useEffect(() => {\n    if (accessToken) {\n      localStorage.setItem(\"accessToken\", accessToken);\n    }\n    if (refreshToken) {\n      localStorage.setItem(\"refreshToken\", refreshToken);\n    }\n  }, [accessToken, refreshToken]);\n  const login = tokens => {\n    setAccessToken(tokens.accessToken);\n    setRefreshToken(tokens.refreshToken);\n  };\n  const logout = () => {\n    setAccessToken(\"\");\n    setRefreshToken(\"\");\n    localStorage.removeItem(\"accessToken\");\n    localStorage.removeItem(\"refreshToken\");\n  };\n  const refreshAccessToken = async () => {\n    try {\n      const {\n        data\n      } = await axios.post(\"http://localhost:5000/api/auth/refresh\", {\n        refreshToken\n      });\n      setAccessToken(data.accessToken);\n    } catch (error) {\n      var _error$response;\n      console.error(\"Failed to refresh token:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      logout();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      accessToken,\n      login,\n      logout,\n      refreshAccessToken\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"fgd0YZUrOaF7Vk04utLXcpKycmk=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","accessToken","setAccessToken","localStorage","getItem","refreshToken","setRefreshToken","setItem","login","tokens","logout","removeItem","refreshAccessToken","data","post","error","_error$response","console","response","message","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/NodeJS Apps/weather-app/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [accessToken, setAccessToken] = useState(localStorage.getItem(\"accessToken\") || \"\");\r\n  const [refreshToken, setRefreshToken] = useState(localStorage.getItem(\"refreshToken\") || \"\");\r\n\r\n  useEffect(() => {\r\n    if (accessToken) {\r\n      localStorage.setItem(\"accessToken\", accessToken);\r\n    }\r\n    if (refreshToken) {\r\n      localStorage.setItem(\"refreshToken\", refreshToken);\r\n    }\r\n  }, [accessToken, refreshToken]);\r\n\r\n  const login = (tokens) => {\r\n    setAccessToken(tokens.accessToken);\r\n    setRefreshToken(tokens.refreshToken);\r\n  };\r\n\r\n  const logout = () => {\r\n    setAccessToken(\"\");\r\n    setRefreshToken(\"\");\r\n    localStorage.removeItem(\"accessToken\");\r\n    localStorage.removeItem(\"refreshToken\");\r\n  };\r\n\r\n  const refreshAccessToken = async () => {\r\n    try {\r\n      const { data } = await axios.post(\"http://localhost:5000/api/auth/refresh\", { refreshToken });\r\n      setAccessToken(data.accessToken);\r\n    } catch (error) {\r\n      console.error(\"Failed to refresh token:\", error.response?.data || error.message);\r\n      logout();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ accessToken, login, logout, refreshAccessToken }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAACW,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;EACzF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAACW,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;EAE5FX,SAAS,CAAC,MAAM;IACd,IAAIQ,WAAW,EAAE;MACfE,YAAY,CAACI,OAAO,CAAC,aAAa,EAAEN,WAAW,CAAC;IAClD;IACA,IAAII,YAAY,EAAE;MAChBF,YAAY,CAACI,OAAO,CAAC,cAAc,EAAEF,YAAY,CAAC;IACpD;EACF,CAAC,EAAE,CAACJ,WAAW,EAAEI,YAAY,CAAC,CAAC;EAE/B,MAAMG,KAAK,GAAIC,MAAM,IAAK;IACxBP,cAAc,CAACO,MAAM,CAACR,WAAW,CAAC;IAClCK,eAAe,CAACG,MAAM,CAACJ,YAAY,CAAC;EACtC,CAAC;EAED,MAAMK,MAAM,GAAGA,CAAA,KAAM;IACnBR,cAAc,CAAC,EAAE,CAAC;IAClBI,eAAe,CAAC,EAAE,CAAC;IACnBH,YAAY,CAACQ,UAAU,CAAC,aAAa,CAAC;IACtCR,YAAY,CAACQ,UAAU,CAAC,cAAc,CAAC;EACzC,CAAC;EAED,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,wCAAwC,EAAE;QAAET;MAAa,CAAC,CAAC;MAC7FH,cAAc,CAACW,IAAI,CAACZ,WAAW,CAAC;IAClC,CAAC,CAAC,OAAOc,KAAK,EAAE;MAAA,IAAAC,eAAA;MACdC,OAAO,CAACF,KAAK,CAAC,0BAA0B,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACG,QAAQ,cAAAF,eAAA,uBAAdA,eAAA,CAAgBH,IAAI,KAAIE,KAAK,CAACI,OAAO,CAAC;MAChFT,MAAM,CAAC,CAAC;IACV;EACF,CAAC;EAED,oBACEd,OAAA,CAACC,WAAW,CAACuB,QAAQ;IAACC,KAAK,EAAE;MAAEpB,WAAW;MAAEO,KAAK;MAAEE,MAAM;MAAEE;IAAmB,CAAE;IAAAb,QAAA,EAC7EA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACzB,EAAA,CAxCWF,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}